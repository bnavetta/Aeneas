buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
	}
}

allprojects {
	apply plugin: 'idea'
	apply plugin: 'eclipse'


	repositories {
		jcenter()
		mavenCentral()
	}

	apply plugin: 'com.github.hierynomus.license'

	license {
		header = rootProject.file('config/HEADER')
		ignoreFailures = true
		skipExistingHeaders = true

		ext.year = Calendar.instance.get(Calendar.YEAR)
	}

	tasks.withType(nl.javadude.gradle.plugins.license.License) {
		tasks.check.dependsOn it
	}

	plugins.withId('java') {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	plugins.withId('io.spring.dependency-management') {
		dependencyManagement {
			dependencies {
				'org.mousio:etcd4j' '2.0.+'
				'org.apache.zookeeper:zookeeper' '3.5.+'
				'com.google.guava:guava' '18.+'
				'com.netflix.exhibitor:exhibitor-core' '1.5.2'
				'com.github.docker-java:docker-java' '0.10+'

				'org.zeroturnaround:zt-exec' '1.7+'
				'com.beust:jcommander' '1.47+'

				dependencySet(group: 'org.slf4j', version: '1.7.+') {
					entry 'slf4j-api'
					entry 'slf4j-simple'
				}

				dependencySet(group: 'io.netty', version: '4.1.0.Beta3') {
					entry 'netty-codec-http'
					entry 'netty-transport'
					entry 'netty-buffer'
					entry 'netty-common'
					entry 'netty-codec'
				}

				dependencySet(group: 'org.eclipse.jetty', version: '9.3.+') {
					entry 'jetty-servlets'
					entry 'jetty-webapp'
					entry 'jetty-server'
					entry 'jetty-http'
				}

				dependencySet(group: 'com.fasterxml.jackson.core', version: '2.4+') {
					entry 'jackson-databind'
					entry 'jackson-core'
					entry 'jackson-annotations'
				}
			}
		}
	}

	plugins.withId('de.gesellix.docker') {
		docker {

			if(System.env.DOCKER_HOST)
			{
				dockerHost = System.env.DOCKER_HOST.replaceAll("^tcp://", "http://")
			}
			else
			{
				println "DOCKER_HOST environment variable not set"
			}
		}
	}
}


wrapper {
	gradleVersion = '2.2.1'
}
